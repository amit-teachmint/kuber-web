---
name: Build and Push Website Builder Docker Image to Google Cloud Platform
on:
  push:
    branches: [ workflow ]        
jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      CI: false
      IMAGE_NAME: kuber_web
      PROJECT_ID: teachmint-dev
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.SERVICE_ACCOUNT_KEY }}
      ARTIFACTORY: pac-docker-artifact-registry
      LOCATION: asia-south1

    steps:
      - name: Checkout
        uses: actions/checkout@v2
   
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: |
          npm ci
          npm run build

      - uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: gcloud repo setup
        run: gcloud config set artifacts/repository $ARTIFACT_REGISTORY
      - name: gcloud location setup
        run: gcloud config set artifacts/location $LOCATION


      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:latest .

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./git_update.sh patch

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker $LOCATION-docker.pkg.dev --quiet

      - name: Push Docker Image to Artifact Registry
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |-
          docker tag $IMAGE_NAME:latest $LOCATION-docker.pkg.dev/$PROJECT_ID/$ARTIFACTORY/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest $LOCATION-docker.pkg.dev/$PROJECT_ID/$ARTIFACTORY/$IMAGE_NAME:$GIT_TAG
          docker push $LOCATION-docker.pkg.dev/$PROJECT_ID/$ARTIFACTORY/$IMAGE_NAME:latest
          docker push $LOCATION-docker.pkg.dev/$PROJECT_ID/$ARTIFACTORY/$IMAGE_NAME:$GIT_TAG


#      - name: Slack Notification
#        uses: rtCamp/action-slack-notify@v2
#        env:
#          SLACK_CHANNEL: ${{ env.SLACK_CHANNEL }}
#          SLACK_COLOR: ${{ job.status }}
#          SLACK_ICON_EMOJI: ':bell:'
#          SLACK_MESSAGE: ' ${{ job.status }} :rocket:'
#          SLACK_TITLE: GITHUB CI Status
#          SLACK_USERNAME: Github-Workflow
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}


